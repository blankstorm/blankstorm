precision highp float;
#include "utils.glslx"

varying vec2 vUV;

uniform vec3 upperColor;
uniform vec3 lowerColor;
uniform float face;
uniform sampler2D sampler;
uniform float resolution;
uniform float seed;
uniform vec2 lowerClamp;
uniform vec3 options;
uniform vec2 range;

export void noiseFragmentShader() {
	float luminance = scalar_field(int(face), vUV, seed, resolution, sampler);
	if (luminance < options.y)
	{
		luminance *= options.z;
	}
	luminance = clamp(luminance, 0.0, 1.0);

	gl_FragColor = options.x > 0.0
		? vec4(luminance, luminance, luminance, 1.0)
		: apply_luminance(luminance, range, lowerColor, upperColor, lowerClamp);
}
