precision highp float;
#include "utils.glslx"

varying vec2 vUV;

uniform vec3 upperColor;
uniform vec3 lowerColor;
uniform float face;
uniform sampler2D sampler;
uniform float resolution;
uniform float seed;
uniform vec2 lowerClamp;
uniform vec2 lowerClip;
uniform int directNoise;
uniform vec2 range;

export void fragmentSource() {
	float luminance = scalar_field(int(face), vUV, seed, resolution, sampler);
	if (luminance < lowerClip.x)
	{
		luminance *= lowerClip.y;
	}
	luminance = clamp(luminance, 0.0, 1.0);

	gl_FragColor = directNoise > 0
		? vec4(vec3(luminance), 1.0)
		: apply_luminance(luminance, range, lowerColor, upperColor, lowerClamp);
}
